sequenceDiagram
Title: Collaborator Certificate Signing Flow
  participant A as Aggregator
  participant CA as CA
  participant C as Collaborator
  CA->>CA: 1. Create CA:<br>`cfssl gencert -initca csr_ca.json`
  CA->>CA: 2. Create server key pair for tls connection (between CA and clients):<br>cfssl gencert -ca=ca.pem -ca-key=ca-key.pem  -hostname='localhost' csr_server.json
  CA->>CA: 3. Create auth key:<br>`echo -n $(openssl rand -hex 16 | tr -d '\n') > base.key` to generate auth_key
  CA->>CA: 4. Up HTTPS CA server:<br>`cfssl serve -ca-key ca-key.pem -ca ca.pem -tls-key server-key.pem -tls-cert server.pem -config config_ca.json` <br> to up CA server
  CA->>C: 5. In untrusted area: manually deliver CA cert.<br>In trusted area use:`cfssl info -remote ca_host:8888`
  Note over C,CA: Get ca.pem
  CA->>A: 6. In untrusted area: manually deliver CA cert.<br>In trusted area use:`cfssl info -remote ca_host:8888`
  Note over A,CA: Get ca.pem
  A->>A: 7.a. Generate key pair for agregator.
  A->>CA: 7.b. Sign generated aggregator cert (one command for a and b):<br>`cfssl gencert -hostname='host' -tls-remote-ca ca.pem -config config_server.json csr_server.json`
  Note over A,CA: Get signed agg.pem 
  C->>C: 8.a Generate key pair for collaborator.
  C->>CA: 8.b Sign generated collaborator cert (one command for a and b):<br>`cfssl gencert -tls-remote-ca ca.pem -config config_client.json csr_client.json`
  Note over C,CA: Get signed col.pem 
  